{"version":3,"sources":["componentes/BotaoSubmit/index.js","componentes/BotaoCancelar/index.js","componentes/BotaoNovo/index.js","services/HttpService.js","helpers/DateHelper.js","models/Animal.js","config/index.js","services/AnimalService.js","models/Especie.js","services/EspecieService.js","enums/FormMode/index.js","pages/FormularioAnimal/index.js","pages/FormularioEspecie/index.js","models/Consulta.js","services/ConsultaService.js","models/Funcionario.js","services/FuncionarioService.js","models/Medicamento.js","services/MedicamentoService.js","pages/FormularioConsulta/index.js","pages/FormularioFuncionario/index.js","pages/FormularioMedicamento/index.js","pages/Main/index.js","componentes/MenuSuperior/index.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["BotaoSubmit","props","react_default","a","createElement","Object","assign","type","className","BotaoCancelar","BotaoNovo","HttpService","baseUrl","classCallCheck","this","url","params","fetch","then","handleRequest","res","ok","Error","json","_send","method","data","body","JSON","stringify","DateHelper","date","concat","_arrumaZero","getDate","getMonth","getFullYear","num","brStringDate","array","split","Animal","id","nome","dtNascimento","especie","codEspecie","codAnimalPai","codAnimalMae","_id","_nome","_dtNascimento","_especie","_codEspecie","_codAnimalPai","_codAnimalMae","toBrDate","API_URL","animalService","AnimalService","httpService","get","animais","console","log","map","animal","Date","delete","jsonAnimal","post","codAnimal","put","Especie","codespecie","nomeespecie","expectativaespecie","_nomeEspecie","_expectativaEspecie","especieService","EspecieService","FormMode","NONE","ADD","VIEW","FormularioAnimal","state","especies","idAnimal","formControls","nomeAnimal","value","dtNascAnimal","formMode","handleSubmit","_callee","e","regenerator_default","wrap","_context","prev","next","preventDefault","_this","getAnimalFromForm","inserirAnimal","atualizarAnimal","buscaTodos","sent","setState","clearFields","stop","handleChange","name","target","objectSpread","defineProperty","handleCancelForm","handleNewForm","Promise","all","lista","find","getId","getNome","getCodEspecie","getCodPai","getCodMae","brDateToEnDate","getDataNascimento","_this2","filter","deletar","_this3","Fragment","componentes_BotaoNovo","onClick","length","key","getEspecie","index_esm","handleEdit","bind","size","handleDelete","colSpan","onChange","disabled","componentes_BotaoSubmit","componentes_BotaoCancelar","Component","FormularioEspecie","idEspecie","nomeEspecie","expectativaVida","replace","getFormEspecie","cadastra","atualiza","getExpectativaVida","deleta","Consulta","idFuncionario","nomeFuncionario","diagnostico","medicamentos","_idAnimal","_nomeAnimal","_idFuncionario","_nomeFuncionario","_data","_diagnostico","_medicamentos","consultaService","ConsultaService","consulta","Funcionario","endereco","email","crmv","especialidade","_endereco","_email","_crmv","_especialidade","funcionarioService","FuncionarioService","dados","funcionario","Medicamento","medicamentoService","MedicamentoService","medicamento","FormularioConsulta","consultas","medicamentosEscolhidos","idConsulta","dtConsulta","funcionarios","getConsultaFromForm","addMedicamento","codmedicamento","animaiService","formularioService","getMedicamentos","parse","getIdAnimal","getIdFuncionario","getData","getDiagnostico","codanimal","matricula","diagnosticoconsulta","index","obj","i","refs","_this4","getNomeAnimal","getNomeFuncionario","handleView","class","med","ref","handleChangePrescricao","removeMedicamento","colspan","FormularioFuncionario","getFormFuncionario","getEndereco","getEmail","getCrmv","getEspecialidade","idMedicamento","nomemedicamento","getFormMedicamento","Main","MenuSuperior","pageChecked","window","location","pathname","pop","react_router_dom","to","handleClick","Routes","basename","MenuSuperior_MenuSuperior","react_router","path","exact","component","FormularioMedicamento","App","routes","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7985d784.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst BotaoSubmit = (props) => (\r\n    <button type=\"submit\" {...props} className=\"btn btn-primary\">Confirmar</button>\r\n);\r\nexport default BotaoSubmit;","import React from 'react';\r\n\r\nconst BotaoCancelar = (props) => (\r\n    <button type=\"button\" {...props} className=\"btn btn-danger\">Cancelar</button>\r\n);\r\nexport default BotaoCancelar;","import React from 'react';\r\n\r\nconst BotaoNovo = (props) => (\r\n    <button type=\"button\" {...props} className=\"btn btn-primary\">Novo</button>\r\n);\r\nexport default BotaoNovo;","export default class HttpService{\r\n    constructor(baseUrl){\r\n        this.baseUrl = baseUrl;\r\n    }\r\n    _send(url,params){\r\n        return fetch(url,params).then(this.handleRequest);\r\n    }\r\n    handleRequest(res){\r\n        if (!res.ok) throw new Error('Ocorrey um erro ao executar requisição');\r\n        return res.json();\r\n    }\r\n    get(url){\r\n        return this._send(this.baseUrl+url);\r\n    }\r\n    delete(url){\r\n        return this._send(this.baseUrl+url,{method:'DELETE'});\r\n    }\r\n    post(url,data){\r\n        return this._send(this.baseUrl+url,{method:'POST',body:JSON.stringify(data)});\r\n    }\r\n    put(url,data){\r\n        return this._send(this.baseUrl+url,{method:'PUT',body:JSON.stringify(data)});\r\n    }\r\n}","export default class DateHelper{\r\n    static toBrDate(date){\r\n        return `${DateHelper._arrumaZero(date.getDate())}/${DateHelper._arrumaZero(date.getMonth()+1)}/${date.getFullYear()}`\r\n    }\r\n\r\n    static _arrumaZero(num){\r\n        return num<10?('0'+num):num;\r\n    }\r\n    static brDateToEnDate(brStringDate){\r\n        let array = brStringDate.split('/')\r\n        return `${array[2]}-${array[1]}-${array[0]}`;\r\n    }\r\n}","import DateHelper from '../helpers/DateHelper';\r\n\r\nexport default class Animal{\r\n    constructor(id,nome,dtNascimento,especie,codEspecie,codAnimalPai,codAnimalMae){\r\n        this._id = id;\r\n        this._nome = nome;\r\n        this._dtNascimento = dtNascimento;\r\n        this._especie = especie;\r\n        this._codEspecie = codEspecie;\r\n        this._codAnimalPai = codAnimalPai;\r\n        this._codAnimalMae = codAnimalMae;\r\n    }\r\n    getId(){\r\n        return this._id;\r\n    }\r\n    getNome(){\r\n        return this._nome;\r\n    }\r\n    getDataNascimento(){\r\n        return DateHelper.toBrDate(this._dtNascimento);\r\n    }\r\n    getEspecie(){\r\n        return this._especie;\r\n    }\r\n    getCodEspecie(){\r\n        return this._codEspecie;\r\n    }\r\n    getCodPai(){\r\n        return this._codAnimalPai\r\n    }\r\n    getCodMae(){\r\n        return this._codAnimalMae;\r\n    }\r\n}","const API_URL = 'http://localhost:8080/Trabalho_Ban2CrudWeb/api/';\r\n\r\nexport default API_URL;","import HttpService from './HttpService';\r\nimport Animal from '../models/Animal';\r\nimport API_URL from '../config';\r\n\r\nclass AnimalService{\r\n    constructor(httpService){\r\n        this.httpService = httpService;\r\n    }\r\n\r\n    buscaTodos(){\r\n       return this.httpService.get(`animais`)\r\n        .then( animais => {\r\n            console.log(animais)\r\n            return animais.map(animal => \r\n                new Animal(\r\n                    animal['codAnimal'],\r\n                    animal['nomeAnimal'],\r\n                    new Date(animal['dtNascAnimal']),\r\n                    animal['especie'],\r\n                    animal['codEspecie'],\r\n                    animal['codAnimalPai'],\r\n                    animal['codAnimalMae']\r\n                    )\r\n                );\r\n        })\r\n    }\r\n\r\n    deletar(animal){\r\n        return this.httpService.delete(`animais/animal/${animal}`);\r\n    }\r\n\r\n    inserirAnimal(jsonAnimal){\r\n        return this.httpService.post(`animais/animal`,jsonAnimal);\r\n    }\r\n\r\n    atualizarAnimal(codAnimal,jsonAnimal){\r\n        return this.httpService.put(`animais/animal/${codAnimal}`,jsonAnimal);\r\n    }\r\n}\r\n\r\nconst httpService = new HttpService(API_URL);\r\n\r\nconst animalService = new AnimalService(httpService);\r\n\r\nexport default animalService;","export default class Especie{\r\n    constructor(codespecie,nomeespecie,expectativaespecie){\r\n        this._codEspecie = codespecie;\r\n        this._nomeEspecie = nomeespecie;\r\n        this._expectativaEspecie = expectativaespecie;\r\n    }\r\n\r\n    getId(){\r\n        return this._codEspecie\r\n    }\r\n    getNome(){\r\n        return this._nomeEspecie;\r\n    }\r\n    getExpectativaVida(){\r\n        return this._expectativaEspecie;\r\n    }\r\n}","import API_URL from \"../config\";\r\nimport HttpService from './HttpService';\r\nimport Especie from '../models/Especie';\r\n\r\nclass EspecieService{\r\n    constructor(httpService){\r\n        this.httpService = httpService;\r\n    }\r\n\r\n    lista(){\r\n        return this.httpService\r\n            .get(`especies`)\r\n            .then(data => data.map(especie => new Especie(especie['codespecie'],especie['nomeespecie'],especie['expectativaespecie'])))\r\n    }\r\n\r\n    cadastra(data){\r\n        return this.httpService.post(`especies/especie`,data);\r\n    }\r\n\r\n    atualiza(id,data){\r\n        return this.httpService.put(`especies/especie/${id}`,data);\r\n    }\r\n\r\n    deleta(id){\r\n        return this.httpService.delete(`especies/especie/${id}`);\r\n    }\r\n}\r\nconst httpService = new HttpService(API_URL);\r\nconst especieService = new EspecieService(httpService);\r\nexport default especieService;","const FormMode = {\r\n    NONE:'invisible',\r\n    ADD:'visible',\r\n    VIEW:'visible '\r\n}\r\n\r\nexport default FormMode;","import React,{Component} from 'react';\r\n\r\nimport BotaoSubmit from '../../componentes/BotaoSubmit';\r\nimport BotaoCancelar from '../../componentes/BotaoCancelar';\r\nimport BotaoNovo from '../../componentes/BotaoNovo';\r\nimport animalService from '../../services/AnimalService';\r\nimport especieService from '../../services/EspecieService';\r\nimport FormMode from '../../enums/FormMode';\r\nimport DateHelper from '../../helpers/DateHelper';\r\n\r\nimport {MdEdit,MdDelete} from 'react-icons/md';\r\n\r\nexport default class FormularioAnimal extends Component{\r\n    state = {\r\n        animais:[],\r\n        especies:[],\r\n        idAnimal:'',\r\n        formControls:{\r\n            nomeAnimal:{value:''},\r\n            codEspecie:{value:''},\r\n            codAnimalPai:{value:''},\r\n            codAnimalMae:{value:''},\r\n            dtNascAnimal:{value:''}\r\n        },\r\n        formMode:FormMode.NONE\r\n    };\r\n\r\n    async componentDidMount(){\r\n        const [animais,especies] = await Promise.all([animalService.buscaTodos(),especieService.lista()]);\r\n        console.log('animais',animais)\r\n        this.setState({\r\n            animais:animais,\r\n            especies:especies\r\n        });\r\n    }\r\n\r\n    getAnimalFromForm(){\r\n        return {\r\n            nomeAnimal: this.state.formControls.nomeAnimal.value,\r\n            codEspecie: this.state.formControls.codEspecie.value,\r\n            codAnimalPai: this.state.formControls.codAnimalPai.value||null,\r\n            codAnimalMae: this.state.formControls.codAnimalMae.value||null,\r\n            dtNascAnimal: this.state.formControls.dtNascAnimal.value\r\n        };\r\n    }\r\n\r\n    handleSubmit = async e => {\r\n        e.preventDefault();\r\n        let animal = this.getAnimalFromForm();\r\n        if ( !this.state.idAnimal ) {\r\n            await animalService.inserirAnimal(animal);\r\n        } else {\r\n            await animalService.atualizarAnimal(this.state.idAnimal,animal);\r\n        }\r\n        let animais = await animalService.buscaTodos();\r\n        this.setState({animais:animais});\r\n        this.clearFields(FormMode.NONE);\r\n    }\r\n\r\n    handleChange = e =>{\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState({\r\n          formControls: {\r\n              ...this.state.formControls,\r\n              [name]: {\r\n              ...this.state.formControls[name],\r\n              value\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    handleEdit(idAnimal){\r\n        let animal = this.state.animais.find(animal => animal.getId() == idAnimal);\r\n        this.setState({\r\n            idAnimal:idAnimal,\r\n            formMode:FormMode.ADD,\r\n            formControls:{\r\n                nomeAnimal:{value:animal.getNome()},\r\n                codEspecie:{value:animal.getCodEspecie()},\r\n                codAnimalPai:{value:animal.getCodPai()},\r\n                codAnimalMae:{value:animal.getCodMae()},\r\n                dtNascAnimal:{value:DateHelper.brDateToEnDate(animal.getDataNascimento())}\r\n            }\r\n        });\r\n    }\r\n    handleDelete(codAnimal){\r\n        let animais = this.state.animais.filter(animal => animal.getId()!=codAnimal);\r\n        animalService\r\n            .deletar(codAnimal)\r\n            .then(()=>this.setState({animais:animais}));\r\n    }\r\n\r\n    handleCancelForm = e => {\r\n       this.clearFields(FormMode.NONE);\r\n    }\r\n\r\n    handleNewForm = e => {\r\n        this.clearFields(FormMode.ADD);\r\n    }\r\n\r\n    clearFields(formMode){\r\n        this.setState({\r\n            idAnimal:'',\r\n            formMode:formMode,\r\n            formControls:{\r\n                nomeAnimal:{value:''},\r\n                codEspecie:{value:''},\r\n                codAnimalPai:{value:''},\r\n                codAnimalMae:{value:''},\r\n                dtNascAnimal:{value:''}\r\n            }\r\n        });\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n                <div className=\"container\">\r\n                    <div className=\"row form-group\"></div>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <div>\r\n                            <h3>Cadastro de Animal:</h3>\r\n                        </div>\r\n                        <div className={`${this.state.formMode == FormMode.ADD ? FormMode.NONE : FormMode.ADD} float-right`}>\r\n                            <BotaoNovo onClick={this.handleNewForm}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row form-group\">\r\n                        <div className=\"col-md-12\">\r\n                            <table className=\"table table-bordered table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Nome</th>\r\n                                        <th>Esp&eacute;cie</th>\r\n                                        <th>Data Nascimento</th>\r\n                                        <th>Editar/Remover</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {!this.state.animais.length ? \r\n                                        (<tr><td colSpan=\"4\">Nenhum animal cadastrado</td></tr>) : \r\n                                        (this.state.animais.map(animal => (\r\n                                            <tr key={animal.getId()}>\r\n                                                <td>{animal.getNome()}</td>\r\n                                                <td>{animal.getEspecie()}</td>\r\n                                                <td>{animal.getDataNascimento()}</td>\r\n                                                <td>\r\n                                                    <MdEdit onClick={this.handleEdit.bind(this,animal.getId())} size={24}/>\r\n                                                    <MdDelete onClick={this.handleDelete.bind(this,animal.getId())} size={24}/>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )))\r\n                                        }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <form className={this.state.formMode}>\r\n                        <div className=\"row form-group\">\r\n                            <div className=\"col-md-6\">\r\n                                <label>Nome do Animal:</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"nomeAnimal\"\r\n                                    className=\"form-control\"\r\n                                    value={this.state.formControls.nomeAnimal.value}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-3\">\r\n                                <label>Esp&eacute;cie:</label>\r\n                                <select\r\n                                    name=\"codEspecie\"\r\n                                    className=\"form-control\"\r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.formControls.codEspecie.value}>\r\n                                        <option value=\"\">Selecione...</option>\r\n                                        {(this.state.especies.map(especie => (\r\n                                            <option key={especie.getId()} value={especie.getId()}>{especie.getNome()}</option>\r\n                                        )))}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row form-group\">\r\n                            <div className=\"col-md-3\">\r\n                                <label>Pai:</label>\r\n                                <select\r\n                                    name=\"codAnimalPai\"\r\n                                    className=\"form-control\"\r\n                                    onChange={this.handleChange}\r\n                                    disabled={!this.state.formControls.codEspecie.value}\r\n                                    value={this.state.formControls.codAnimalPai.value}>\r\n                                    <option value=\"\">Selecione...</option>\r\n                                    {(this.state.animais\r\n                                        .filter(animal => animal.getCodEspecie() == this.state.formControls.codEspecie.value)\r\n                                        .filter(animal => animal.getId() != this.state.formControls.codAnimalMae.value)\r\n                                        .map(animal => (<option key={animal.getId()} value={animal.getId()}>{animal.getNome()}</option>)\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-md-3\">\r\n                                <label>M&atilde;e:</label>\r\n                                <select\r\n                                    name=\"codAnimalMae\"\r\n                                    className=\"form-control\"\r\n                                    onChange={this.handleChange}\r\n                                    disabled={!this.state.formControls.codEspecie.value}\r\n                                    value={this.state.formControls.codAnimalMae.value}>>\r\n                                    <option value=\"\">Selecione...</option>\r\n                                    {(this.state.animais\r\n                                        .filter(animal => animal.getCodEspecie() == this.state.formControls.codEspecie.value)\r\n                                        .filter(animal => animal.getId() != this.state.formControls.codAnimalPai.value)\r\n                                        .map(animal => (<option key={animal.getId()} value={animal.getId()}>{animal.getNome()}</option>)\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-md-3\">\r\n                                <label>Data de Nascimento:</label>\r\n                                <input \r\n                                    type=\"date\"\r\n                                    value={this.state.formControls.dtNascAnimal.value}\r\n                                    name=\"dtNascAnimal\"\r\n                                    className=\"form-control\"\r\n                                    onChange={this.handleChange}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row form-group\">\r\n                            <div className=\"col-md-3 d-flex justify-content-between\">\r\n                                <BotaoSubmit onClick={this.handleSubmit}/>\r\n                                <BotaoCancelar onClick={this.handleCancelForm}/>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport {MdEdit,MdDelete} from 'react-icons/md';\r\n\r\nimport BotaoSubmit from '../../componentes/BotaoSubmit';\r\nimport BotaoCancelar from '../../componentes/BotaoCancelar';\r\nimport BotaoNovo from '../../componentes/BotaoNovo';\r\nimport FormMode from '../../enums/FormMode';\r\nimport especieService from '../../services/EspecieService';\r\n\r\nexport default class FormularioEspecie extends Component{\r\n    state = {\r\n        formMode:FormMode.NONE,\r\n        especies:[],\r\n        idEspecie:'',\r\n        formControls:{\r\n            nomeEspecie:{\r\n                value:''\r\n            },\r\n            expectativaVida:{\r\n                value:''\r\n            }\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let especies = await especieService.lista();\r\n        this.setState({especies:especies})\r\n    }\r\n\r\n    handleEdit(idEspecie){\r\n        let especie = this.state.especies.find(especie => especie.getId()==idEspecie);\r\n\r\n        this.setState({\r\n            idEspecie:idEspecie,\r\n            formMode:FormMode.ADD,\r\n            formControls:{\r\n                nomeEspecie:{\r\n                    value:especie.getNome()\r\n                },\r\n                expectativaVida:{\r\n                    value:especie.getExpectativaVida()\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    handleDelete(idEspecie){\r\n        let especies = this.state.especies.filter(especie => especie.getId()!=idEspecie);\r\n        especieService\r\n            .deleta(idEspecie)\r\n            .then(()=>this.setState({especies:especies}));\r\n    }\r\n\r\n    handleCancelForm = e => {\r\n        this.clearFields(FormMode.NONE);\r\n     }\r\n     \r\n     handleChange = e => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        if ( name == 'expectativaVida' ) value = value.replace(/[^0-9]/g,'');\r\n        this.setState({\r\n          formControls: {\r\n              ...this.state.formControls,\r\n              [name]: {\r\n              ...this.state.formControls[name],\r\n              value\r\n            }\r\n          }\r\n        });\r\n     }\r\n\r\n     handleNewForm = e => {\r\n        this.clearFields(FormMode.ADD);\r\n    }\r\n    \r\n    handleSubmit = async e => {\r\n        e.preventDefault();\r\n        let especie = this.getFormEspecie();\r\n        if ( !this.state.idEspecie ) {\r\n            await especieService.cadastra(especie);\r\n        } else {\r\n            await especieService.atualiza(this.state.idEspecie,especie);\r\n        }\r\n        let especies = await especieService.lista();\r\n        this.setState({especies:especies})\r\n        this.clearFields(FormMode.NONE);\r\n    }\r\n    getFormEspecie(){\r\n        return {\r\n            nomeespecie:this.state.formControls.nomeEspecie.value,\r\n            expectativaespecie:this.state.formControls.expectativaVida.value,\r\n        };\r\n    }\r\n    clearFields(formMode){\r\n        this.setState({\r\n            formMode:formMode,\r\n            formControls:{\r\n                nomeEspecie:{value:''},\r\n                expectativaVida:{value:''}\r\n            }\r\n        });\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n                <div className=\"container\">\r\n                <div className=\"row form-group\"></div>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <div>\r\n                            <h3>Cadastro de Esp&eacute;cie:</h3>\r\n                        </div>\r\n                        <div className={`${this.state.formMode == FormMode.ADD ? FormMode.NONE : FormMode.ADD} float-right`}>\r\n                            <BotaoNovo onClick={this.handleNewForm}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row form-group\">\r\n                        <div className=\"col-md-12\">\r\n                            <table className=\"table table-bordered table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Esp&eacute;cie</th>\r\n                                        <th>Expectativa de Vida</th>\r\n                                        <th>Editar/Remover</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {!this.state.especies.length ? \r\n                                        (<tr><td colSpan=\"4\">Nenhuma esp&eacute;cie cadastrada</td></tr>) : \r\n                                        (this.state.especies.map(especie => (\r\n                                            <tr key={especie.getId()}>\r\n                                                <td>{especie.getNome()}</td>\r\n                                                <td>{especie.getExpectativaVida()}</td>\r\n                                                <td>\r\n                                                    <MdEdit onClick={this.handleEdit.bind(this,especie.getId())} size={24}/>\r\n                                                    <MdDelete onClick={this.handleDelete.bind(this,especie.getId())} size={24}/>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )))\r\n                                        }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <form className={this.state.formMode}>\r\n                        <div className=\"row form-group\">\r\n                            <div className=\"col-md-6\">\r\n                                <label>Nome da Esp&eacute;cie:</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"nomeEspecie\"\r\n                                    className=\"form-control\"\r\n                                    value={this.state.formControls.nomeEspecie.value}\r\n                                    onChange={this.handleChange}/>\r\n                            </div>\r\n                            <div className=\"col-md-3\">\r\n                                <label>Expectativa de Vida:</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"expectativaVida\"\r\n                                    className=\"form-control\"\r\n                                    value={this.state.formControls.expectativaVida.value}\r\n                                    onChange={this.handleChange}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row form-group\">\r\n                            <div className=\"col-md-3 d-flex justify-content-between\">\r\n                                <BotaoSubmit  onClick={this.handleSubmit}/>\r\n                                <BotaoCancelar onClick={this.handleCancelForm}/>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","import DateHelper from '../helpers/DateHelper';\r\n\r\nexport default class Consulta{\r\n    constructor(id,idAnimal,nomeAnimal,idFuncionario,nomeFuncionario,data,diagnostico,medicamentos){\r\n        this._id = id;\r\n        this._idAnimal = idAnimal;\r\n        this._nomeAnimal = nomeAnimal;\r\n        this._idFuncionario = idFuncionario;\r\n        this._nomeFuncionario = nomeFuncionario;\r\n        this._data = data;\r\n        this._diagnostico = diagnostico;\r\n        this._medicamentos = medicamentos;\r\n    }\r\n    getId() { return this._id; }\r\n    getIdAnimal() { return this._idAnimal; }\r\n    getNomeAnimal() { return this._nomeAnimal; }\r\n    getNomeFuncionario() { return this._nomeFuncionario; }\r\n    getIdFuncionario() { return this._idFuncionario; }\r\n    getData() { return DateHelper.toBrDate(this._data); }\r\n    getDiagnostico() { return this._diagnostico; }\r\n    getMedicamentos() { return this._medicamentos; }\r\n}","import API_URL from \"../config\";\r\nimport HttpService from './HttpService';\r\nimport Consulta from '../models/Consulta';\r\n\r\nclass ConsultaService{\r\n    constructor(httpService){\r\n        this.httpService = httpService;\r\n    }\r\n\r\n    lista(){\r\n        return this.httpService\r\n            .get(`consultas`)\r\n            .then(data => \r\n                    data.map(consulta => \r\n                            new Consulta(\r\n                                consulta['codconsulta'],\r\n                                consulta['codanimal'],\r\n                                consulta['nomeanimal'],\r\n                                consulta['matricula'],\r\n                                consulta['nomefuncionario'],\r\n                                new Date(consulta['data']),\r\n                                consulta['diagnosticoconsulta'],\r\n                                consulta['medicamentos']\r\n                            )\r\n                        )\r\n                )\r\n    }\r\n\r\n    cadastra(data){\r\n        return this.httpService.post(`consultas/consulta`,data);\r\n    }\r\n\r\n    atualiza(id,data){\r\n        return this .httpService.put(`consultas/consulta/${id}`,data);\r\n    }\r\n\r\n    deleta(id){\r\n        return this.httpService.delete(`consultas/consulta/${id}`);\r\n    }\r\n}\r\nconst httpService = new HttpService(API_URL);\r\nconst consultaService = new ConsultaService(httpService);\r\nexport default consultaService;","export default class Funcionario{\r\n    constructor(id,nome,endereco,email,crmv,especialidade){\r\n        this._id=id;\r\n        this._nome=nome;\r\n        this._endereco=endereco;\r\n        this._email=email;\r\n        this._crmv=crmv;\r\n        this._especialidade=especialidade;\r\n    }\r\n    getId() { return this._id; }\r\n    getNome() { return this._nome; }\r\n    getEndereco() { return this._endereco; }\r\n    getEmail() { return this._email; }\r\n    getCrmv() { return this._crmv; }\r\n    getEspecialidade() { return this._especialidade; }\r\n}","import HttpService from \"./HttpService\";\r\nimport API_URL from \"../config\";\r\nimport Funcionario from \"../models/Funcionario\";\r\n\r\nclass FuncionarioService{\r\n    constructor(httpService){\r\n        this.httpService = httpService;\r\n    }\r\n    lista(){\r\n        return this.httpService\r\n            .get(`funcionarios`)\r\n            .then(dados => \r\n                    dados.map(data => new Funcionario(\r\n                        data['matricula']||'',\r\n                        data['nome']||'',\r\n                        data['endereco']||'',\r\n                        data['email']||'',\r\n                        data['crmv']||'',\r\n                        data['especialidade']||'')\r\n                    )\r\n                )\r\n    }\r\n\r\n    cadastra(funcionario){\r\n        return this.httpService.post(`funcionarios/funcionario`,funcionario);\r\n    }\r\n\r\n    atualiza(idFuncionario,funcionario){\r\n        return this.httpService.put(`funcionarios/funcionario/${idFuncionario}`,funcionario);\r\n    }\r\n\r\n    deleta(idFuncionario){\r\n        return this.httpService.delete(`funcionarios/funcionario/${idFuncionario}`);\r\n    }\r\n\r\n}\r\n\r\nconst httpService = new HttpService(API_URL);\r\nconst funcionarioService = new FuncionarioService(httpService);\r\n\r\nexport default funcionarioService;","export default class Medicamento{\r\n    constructor(id,nome){\r\n        this._id = id;\r\n        this._nome = nome;\r\n    }\r\n\r\n    getId() { return this._id; }\r\n    getNome() { return this._nome; }\r\n}","import API_URL from \"../config\";\r\nimport HttpService from './HttpService';\r\nimport Medicamento from '../models/Medicamento';\r\n\r\nclass MedicamentoService{\r\n    constructor(httpService){\r\n        this.httpService = httpService;\r\n    }\r\n\r\n    lista(){\r\n        return this.httpService\r\n            .get(`medicamentos`)\r\n            .then(data =>\r\n                    data.map(medicamento => new Medicamento(\r\n                            medicamento['codmedicamento'],medicamento['nomemedicamento'])\r\n                        )\r\n                )\r\n    }\r\n\r\n    cadastra(data){\r\n        return this.httpService.post(`medicamentos/medicamento`,data);\r\n    }\r\n\r\n    atualiza(id,data){\r\n        return this.httpService.put(`medicamentos/medicamento/${id}`,data);\r\n    }\r\n\r\n    deleta(id){\r\n        return this.httpService.delete(`medicamentos/medicamento/${id}`);\r\n    }\r\n}\r\nconst httpService = new HttpService(API_URL);\r\nconst medicamentoService = new MedicamentoService(httpService);\r\nexport default medicamentoService;","import React,{Component} from 'react';\r\nimport {MdEdit , MdDelete, MdAddBox, MdSearch} from 'react-icons/md';\r\n\r\n\r\nimport BotaoSubmit from '../../componentes/BotaoSubmit';\r\nimport BotaoNovo from '../../componentes/BotaoNovo';\r\nimport BotaoCancelar from '../../componentes/BotaoCancelar';\r\nimport FormMode from '../../enums/FormMode';\r\nimport consultaService from '../../services/ConsultaService';\r\nimport DateHelper from '../../helpers/DateHelper';\r\nimport animaiService from '../../services/AnimalService';\r\nimport formularioService from '../../services/FuncionarioService';\r\nimport medicamentoService from '../../services/MedicamentoService';\r\n\r\nexport default class FormularioConsulta extends Component{\r\n    state = {\r\n        formMode:FormMode.NONE,\r\n        consultas:[],\r\n        medicamentos:[],\r\n        medicamentosEscolhidos:[],\r\n        idConsulta:'',\r\n        formControls:{\r\n            animal:{value:''},\r\n            funcionario:{value:''},\r\n            dtConsulta:{value:''},\r\n            diagnostico:{value:''}\r\n        },\r\n        animais:[],\r\n        funcionarios:[]\r\n    }\r\n    async componentDidMount(){\r\n        let consultas = await consultaService.lista();\r\n        this.setState({consultas:consultas})\r\n        let [animais,funcionarios, medicamentos] = await Promise\r\n            .all([animaiService.buscaTodos(),formularioService.lista(),medicamentoService.lista()])\r\n        this.setState({\r\n            animais:animais,\r\n            funcionarios:funcionarios,\r\n            medicamentos:medicamentos\r\n        })\r\n    }\r\n    handleChange = e => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        console.log(value.length);\r\n        this.setState({\r\n          formControls: {\r\n              ...this.state.formControls,\r\n              [name]: {\r\n              ...this.state.formControls[name],\r\n              value\r\n            }\r\n          }\r\n        });\r\n    }\r\n    handleSubmit = async e => {\r\n        e.preventDefault();\r\n        let consulta = this.getConsultaFromForm();\r\n        if ( !this.state.idConsulta ) {\r\n            await consultaService.cadastra(consulta);\r\n        } else {\r\n            await consultaService.atualiza(this.state.idConsulta,consulta);\r\n        }\r\n        let consultas = await consultaService.lista();\r\n        this.setState({consultas:consultas});\r\n        this.clearFields(FormMode.NONE);\r\n    }\r\n    handleView(idConsulta){\r\n        let consulta = this.state.consultas.find(consulta => consulta.getId()==idConsulta);\r\n        console.log(consulta);\r\n        this.setState({\r\n            idConsulta:'',\r\n            formMode:FormMode.VIEW,\r\n            medicamentosEscolhidos:consulta.getMedicamentos()\r\n        })\r\n    }\r\n    handleEdit(idConsulta){\r\n        let consulta = this.state.consultas.find(consulta => consulta.getId()==idConsulta);\r\n        console.log(consulta);\r\n        this.setState({\r\n            idConsulta:idConsulta,\r\n            formMode:FormMode.ADD,\r\n            medicamentosEscolhidos:JSON.parse(JSON.stringify(consulta.getMedicamentos())),\r\n            formControls:{\r\n                animal:{\r\n                    value:consulta.getIdAnimal()\r\n                },\r\n                funcionario:{\r\n                    value:consulta.getIdFuncionario()\r\n                },\r\n                dtConsulta:{\r\n                    value: DateHelper.brDateToEnDate(consulta.getData())\r\n                },\r\n                diagnostico:{\r\n                    value:consulta.getDiagnostico()\r\n                }\r\n            }\r\n        })\r\n    }\r\n    getConsultaFromForm(){\r\n        return {\r\n            codanimal: this.state.formControls.animal.value,\r\n            matricula: this.state.formControls.funcionario.value,\r\n            data: this.state.formControls.dtConsulta.value,\r\n            diagnosticoconsulta: this.state.formControls.diagnostico.value,\r\n            medicamentos:this.state.medicamentosEscolhidos\r\n        };\r\n    }\r\n    handleDelete(idConsulta){\r\n        let consultas = this.state.consultas.filter(consulta => consulta.getId()!=idConsulta);\r\n        consultaService\r\n            .deleta(idConsulta)\r\n            .then(()=>{\r\n                this.setState({consultas:consultas});\r\n                this.clearFields(FormMode.NONE);\r\n            });\r\n    }\r\n\r\n    handleCancelForm = e => {\r\n        this.clearFields(FormMode.NONE);\r\n    }\r\n    handleNewForm = e => {\r\n        this.clearFields(FormMode.ADD);\r\n    }\r\n    removeMedicamento(index){\r\n        let medicamentos = this.state.medicamentosEscolhidos.filter((obj,i) => i != index);\r\n        this.setState({medicamentosEscolhidos:medicamentos})\r\n    }\r\n    addMedicamento = e => {\r\n        this.setState({\r\n            medicamentosEscolhidos:this.state.medicamentosEscolhidos.concat({codmedicamento:''})\r\n        })\r\n    }\r\n    handleChangePrescricao(index){\r\n        this.setState({\r\n            medicamentosEscolhidos:this.state.medicamentosEscolhidos.map((obj,i) => {\r\n                if ( i == index ) {\r\n                    obj['codmedicamento']=this.refs[`medicamento___${index}`].value;\r\n                }\r\n                return obj;\r\n            })\r\n        })\r\n    }\r\n    clearFields(formMode){\r\n        this.setState({\r\n            formMode:formMode,\r\n            idConsulta:'',\r\n            medicamentosEscolhidos:[],\r\n            formControls:{\r\n                animal:{value:''},\r\n                funcionario:{value:''},\r\n                dtConsulta:{value:''},\r\n                diagnostico:{value:''}\r\n            }\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                <div className=\"container\">\r\n                <div className=\"row form-group\"></div>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <div>\r\n                            <h3>Realizar Consulta:</h3>\r\n                        </div>\r\n                        <div className={`${this.state.formMode == FormMode.ADD ? FormMode.NONE : FormMode.ADD} float-right`}>\r\n                            <BotaoNovo onClick={this.handleNewForm}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row form-group\">\r\n                        <div className=\"col-md-12\">\r\n                            <table className=\"table table-bordered table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Animal</th>\r\n                                        <th>Funcion&aacute;rio</th>\r\n                                        <th>Data da Consulta</th>\r\n                                        <th>Diagn&oacute;stico</th>\r\n                                        <th>Editar/Remover</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {!this.state.consultas.length ? \r\n                                        (<tr><td colSpan=\"5\">Nenhuma consulta cadastrada</td></tr>) : \r\n                                        (this.state.consultas.map(consulta => (\r\n                                            <tr key={consulta.getId()}>\r\n                                                <td>{consulta.getNomeAnimal()}</td>\r\n                                                <td>{consulta.getNomeFuncionario()}</td>\r\n                                                <td>\r\n                                                    {consulta.getData()} <MdSearch size={24} onClick={this.handleView.bind(this,consulta.getId())}/>\r\n                                                </td>\r\n                                                <td>{consulta.getDiagnostico()}</td>\r\n                                                <td>\r\n                                                    <MdEdit onClick={this.handleEdit.bind(this,consulta.getId())} size={24}/>\r\n                                                    <MdDelete onClick={this.handleDelete.bind(this,consulta.getId())} size={24}/>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )))\r\n                                        }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <form>\r\n                        <div className=\"row\">\r\n                            <div className={`${this.state.idConsulta || this.state.formMode==FormMode.ADD ? FormMode.ADD : FormMode.NONE} col-md-6`}>\r\n                                <div class=\"row form-group\">\r\n                                    <div className=\"col-md-6\">\r\n                                        <label>Nome do Animal:</label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"animal\"\r\n                                            value={this.state.formControls.animal.value}\r\n                                            onChange={this.handleChange}>\r\n                                            <option>Selecione...</option>\r\n                                            {this.state.animais.map(animal => (\r\n                                                <option value={animal.getId()}>{animal.getNome()}</option>\r\n                                                ))}\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"col-md-6\">\r\n                                        <label>Nome do Funcion&aacute;rio:</label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"funcionario\"\r\n                                            value={this.state.formControls.funcionario.value}\r\n                                            onChange={this.handleChange}>\r\n                                            <option>Selecione...</option>\r\n                                            {this.state.funcionarios.map(funcionario => (\r\n                                                <option value={funcionario.getId()}>{funcionario.getNome()}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row form-group\">\r\n                                    <div className=\"col-md-6\">\r\n                                        <label>Data da Consulta:</label>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            className=\"form-control\"\r\n                                            name=\"dtConsulta\"\r\n                                            value={this.state.formControls.dtConsulta.value}\r\n                                            onChange={this.handleChange}\r\n                                            />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row form-group\">\r\n                                    <div className=\"col-md-6\">\r\n                                        <label>Diagn&oacute;stico:</label>\r\n                                        <textarea\r\n                                            name=\"diagnostico\"\r\n                                            onChange={this.handleChange}\r\n                                            value={this.state.formControls.diagnostico.value}\r\n                                            className=\"form-control\"></textarea>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={`${this.state.idConsulta || this.state.formMode != FormMode.NONE ? FormMode.ADD : FormMode.NONE} col-md-6`}>\r\n                                <table className=\"table table-striped table-bordered\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Medicamentos</th>\r\n                                            <th>\r\n                                                <MdAddBox\r\n                                                    className={this.state.idConsulta || this.state.formMode == FormMode.ADD ? FormMode.ADD : FormMode.NONE}\r\n                                                    onClick={this.addMedicamento} size={30}/>\r\n                                            </th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {!this.state.medicamentosEscolhidos.length ? \r\n                                        (<tr><td colspan=\"2\">Nenhum medicamento prescrito</td></tr>) :\r\n                                        ( this.state.medicamentosEscolhidos.map( (med,index) => (\r\n                                            <tr key={index}>\r\n                                                <td>\r\n                                                    <select\r\n                                                        disabled={this.state.formMode != FormMode.ADD}\r\n                                                        ref={`medicamento___${index}`}\r\n                                                        className=\"form-control\"\r\n                                                        value={med['codmedicamento']}\r\n                                                        onChange={this.handleChangePrescricao.bind(this,index)}>\r\n                                                            <option>Selecione...</option>\r\n                                                            {this.state.medicamentos.map(medicamento => (\r\n                                                                <option value={medicamento.getId()}>\r\n                                                                    {medicamento.getNome()}\r\n                                                                </option>\r\n                                                            ))}\r\n                                                    </select>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <MdDelete\r\n                                                        className={this.state.idConsulta || this.state.formMode == FormMode.ADD ? FormMode.ADD : FormMode.NONE} onClick={this.removeMedicamento.bind(this,index)} size={24}/>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`${this.state.idConsulta || this.state.formMode==FormMode.ADD ? FormMode.ADD : FormMode.NONE} row form-group`}>\r\n                            <div className=\"col-md-3 d-flex justify-content-between\">\r\n                                <BotaoSubmit  onClick={this.handleSubmit}/>\r\n                                <BotaoCancelar onClick={this.handleCancelForm}/>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport {MdEdit,MdDelete} from 'react-icons/md';\r\n\r\nimport BotaoSubmit from '../../componentes/BotaoSubmit';\r\nimport BotaoCancelar from '../../componentes/BotaoCancelar';\r\nimport FormMode from '../../enums/FormMode';\r\nimport BotaoNovo from '../../componentes/BotaoNovo';\r\nimport funcionarioService from '../../services/FuncionarioService';\r\n\r\nexport default class FormularioFuncionario extends Component{\r\n    state = {\r\n        funcionarios:[],\r\n        idFuncionario:'',\r\n        formMode:FormMode.NONE,\r\n        formControls:{\r\n            nomeFuncionario:{value:''},\r\n            endereco:{value:''},\r\n            email:{value:''},\r\n            crmv:{value:''},\r\n            especialidade:{value:''}\r\n        }\r\n    }\r\n    async componentDidMount(){\r\n        let funcionarios = await funcionarioService.lista();\r\n        this.setState({funcionarios:funcionarios})\r\n    }\r\n\r\n    handleEdit(idFuncionario){\r\n        let funcionario = this.state.funcionarios.find(funcionario => funcionario.getId()==idFuncionario);\r\n\r\n        this.setState({\r\n            idFuncionario:idFuncionario,\r\n            formMode:FormMode.ADD,\r\n            formControls:{\r\n                nomeFuncionario:{\r\n                    value:funcionario.getNome()\r\n                },\r\n                endereco:{\r\n                    value:funcionario.getEndereco()\r\n                },\r\n                email:{\r\n                    value:funcionario.getEmail()\r\n                },\r\n                crmv:{\r\n                    value:funcionario.getCrmv()\r\n                },\r\n                especialidade:{\r\n                    value:funcionario.getEspecialidade()\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    handleDelete(idFuncionario){\r\n        let funcionarios = this.state.funcionarios.filter(funcionario => funcionario.getId()!=idFuncionario);\r\n        funcionarioService.deleta(idFuncionario)\r\n            .then(()=>this.setState({funcionarios:funcionarios}));\r\n    }\r\n\r\n    handleCancelForm = e => {\r\n        this.clearFields(FormMode.NONE);\r\n     }\r\n     \r\n    handleChange = e => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        if ( name == 'crmv' ) value = value.replace(/[^0-9]/g,'');\r\n        this.setState({\r\n          formControls: {\r\n              ...this.state.formControls,\r\n              [name]: {\r\n              ...this.state.formControls[name],\r\n              value\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    handleNewForm = e => {\r\n        this.clearFields(FormMode.ADD);\r\n    }\r\n    \r\n    handleSubmit = async e => {\r\n        e.preventDefault();\r\n        let funcionario = this.getFormFuncionario();\r\n        if ( !this.state.idFuncionario ) {\r\n            await funcionarioService.cadastra(funcionario);\r\n        } else {\r\n            await funcionarioService.atualiza(this.state.idFuncionario,funcionario);\r\n        }\r\n        let funcionarios = await funcionarioService.lista();\r\n        this.setState({funcionarios:funcionarios})\r\n        this.clearFields(FormMode.NONE);\r\n    }\r\n    getFormFuncionario(){\r\n        return {\r\n            nome:this.state.formControls.nomeFuncionario.value,\r\n            endereco:this.state.formControls.endereco.value,\r\n            email:this.state.formControls.email.value,\r\n            crmv:this.state.formControls.crmv.value,\r\n            especialidade:this.state.formControls.especialidade.value,\r\n        };\r\n    }\r\n    clearFields(formMode){\r\n        this.setState({\r\n            formMode:formMode,\r\n            formControls:{\r\n                nomeFuncionario:{value:''},\r\n                endereco:{value:''},\r\n                email:{value:''},\r\n                crmv:{value:''},\r\n                especialidade:{value:''}\r\n            }\r\n        });\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n                <div className=\"container\">\r\n                    <div className=\"row form-group\"></div>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <div>\r\n                            <h3>Cadastrar Funcion&aacute;rio:</h3>\r\n                        </div>\r\n                        <div className={`${this.state.formMode == FormMode.ADD ? FormMode.NONE : FormMode.ADD} float-right`}>\r\n                            <BotaoNovo onClick={this.handleNewForm}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row form-group\">\r\n                        <div className=\"col-md-12\">\r\n                            <table className=\"table table-bordered table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Nome</th>\r\n                                        <th>Endere&ccedil;o</th>\r\n                                        <th>E-mail</th>\r\n                                        <th>CRMV</th>\r\n                                        <th>Especialidade</th>\r\n                                        <th>Editar/Remover</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {!this.state.funcionarios.length ? \r\n                                        (<tr><td colSpan=\"6\">Nenhum funcion&aacute;rio cadastrado</td></tr>) : \r\n                                        (this.state.funcionarios.map(funcionario => (\r\n                                            <tr key={funcionario.getId()}>\r\n                                                <td>{funcionario.getNome()}</td>\r\n                                                <td>{funcionario.getEndereco()}</td>\r\n                                                <td>{funcionario.getEmail()}</td>\r\n                                                <td>{funcionario.getCrmv()}</td>\r\n                                                <td>{funcionario.getEspecialidade()}</td>\r\n                                                <td>\r\n                                                    <MdEdit onClick={this.handleEdit.bind(this,funcionario.getId())} size={24}/>\r\n                                                    <MdDelete onClick={this.handleDelete.bind(this,funcionario.getId())} size={24}/>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )))\r\n                                        }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <form className={this.state.formMode}>\r\n                        <div className=\"row form-group\">\r\n                            <div className=\"col-md-6\">\r\n                                <label>Nome do Funcion&aacute;rio:</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"nomeFuncionario\"\r\n                                    value={this.state.formControls.nomeFuncionario.value}\r\n                                    onChange={this.handleChange}/>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <label>Endere&ccedil;o:</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"endereco\"\r\n                                    value={this.state.formControls.endereco.value}\r\n                                    onChange={this.handleChange}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row form-group\">\r\n                            <div className=\"col-md-3\">\r\n                                <label>Email:</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"email\"\r\n                                    value={this.state.formControls.email.value}\r\n                                    onChange={this.handleChange}/>\r\n                            </div>\r\n                            <div className=\"col-md-3\">\r\n                                <label>CRMV:</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"crmv\"\r\n                                    value={this.state.formControls.crmv.value}\r\n                                    onChange={this.handleChange}/>\r\n                            </div>\r\n                            <div className=\"col-md-3\">\r\n                                <label>Especialidade:</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"especialidade\"\r\n                                    value={this.state.formControls.especialidade.value}\r\n                                    onChange={this.handleChange}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row form-group\">\r\n                            <div className=\"col-md-3 d-flex justify-content-between\">\r\n                                <BotaoSubmit onClick={this.handleSubmit}/>\r\n                                <BotaoCancelar onClick={this.handleCancelForm}/>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport {MdEdit,MdDelete} from 'react-icons/md';\r\n\r\nimport BotaoSubmit from '../../componentes/BotaoSubmit';\r\nimport BotaoCancelar from '../../componentes/BotaoCancelar';\r\nimport BotaoNovo from '../../componentes/BotaoNovo';\r\nimport FormMode from '../../enums/FormMode';\r\nimport medicamentoService from '../../services/MedicamentoService';\r\n\r\nexport default class FormularioEspecie extends Component{\r\n    state = {\r\n        formMode:FormMode.NONE,\r\n        medicamentos:[],\r\n        idMedicamento:'',\r\n        formControls:{\r\n            nomemedicamento:{\r\n                value:''\r\n            }\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let medicamentos = await medicamentoService.lista();\r\n        this.setState({medicamentos:medicamentos})\r\n    }\r\n\r\n    handleEdit(idMedicamento){\r\n        let medicamento = this.state.medicamentos.find(medicamento => medicamento.getId()==idMedicamento);\r\n\r\n        this.setState({\r\n            idMedicamento:idMedicamento,\r\n            formMode:FormMode.ADD,\r\n            formControls:{\r\n                nomemedicamento:{\r\n                    value:medicamento.getNome()\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    handleDelete(idMedicamento){\r\n        let medicamentos = this.state.medicamentos.filter(medicamento => medicamento.getId()!=idMedicamento);\r\n        medicamentoService\r\n            .deleta(idMedicamento)\r\n            .then(()=>this.setState({medicamentos:medicamentos}));\r\n    }\r\n\r\n    handleCancelForm = e => {\r\n        this.clearFields(FormMode.NONE);\r\n    }\r\n     \r\n    handleChange = e => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        \r\n        this.setState({\r\n          formControls: {\r\n              ...this.state.formControls,\r\n              [name]: {\r\n              ...this.state.formControls[name],\r\n              value\r\n            }\r\n          }\r\n        });\r\n    }\r\n    \r\n    handleNewForm = e => {\r\n        this.clearFields(FormMode.ADD);\r\n    }\r\n    \r\n    handleSubmit = async e => {\r\n        e.preventDefault();\r\n        let medicamento = this.getFormMedicamento();\r\n        if ( !this.state.idMedicamento ) {\r\n            await medicamentoService.cadastra(medicamento);\r\n        } else {\r\n            await medicamentoService.atualiza(this.state.idMedicamento,medicamento);\r\n        }\r\n        let medicamentos = await medicamentoService.lista();\r\n        this.setState({medicamentos:medicamentos})\r\n        this.clearFields(FormMode.NONE);\r\n    }\r\n    getFormMedicamento(){\r\n        return {\r\n            nomemedicamento:this.state.formControls.nomemedicamento.value\r\n        };\r\n    }\r\n    clearFields(formMode){\r\n        this.setState({\r\n            formMode:formMode,\r\n            formControls:{\r\n                nomemedicamento:{value:''}\r\n            }\r\n        });\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n                <div className=\"container\">\r\n                <div className=\"row form-group\"></div>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <div>\r\n                            <h3>Cadastro de Medicamentos:</h3>\r\n                        </div>\r\n                        <div className={`${this.state.formMode == FormMode.ADD ? FormMode.NONE : FormMode.ADD} float-right`}>\r\n                            <BotaoNovo onClick={this.handleNewForm}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row form-group\">\r\n                        <div className=\"col-md-12\">\r\n                            <table className=\"table table-bordered table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Medicamento</th>\r\n                                        <th>Editar/Remover</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {!this.state.medicamentos.length ? \r\n                                        (<tr><td colSpan=\"2\">Nenhum medicamento cadastrado</td></tr>) : \r\n                                        (this.state.medicamentos.map(medicamento => (\r\n                                            <tr key={medicamento.getId()}>\r\n                                                <td>{medicamento.getNome()}</td>\r\n                                                <td>\r\n                                                    <MdEdit onClick={this.handleEdit.bind(this,medicamento.getId())} size={24}/>\r\n                                                    <MdDelete onClick={this.handleDelete.bind(this,medicamento.getId())} size={24}/>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )))\r\n                                        }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <form className={this.state.formMode}>\r\n                        <div className=\"row form-group\">\r\n                            <div className=\"col-md-6\">\r\n                                <label>Nome do Medicamento:</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"nomemedicamento\"\r\n                                    className=\"form-control\"\r\n                                    value={this.state.formControls.nomemedicamento.value}\r\n                                    onChange={this.handleChange}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row form-group\">\r\n                            <div className=\"col-md-3 d-flex justify-content-between\">\r\n                                <BotaoSubmit  onClick={this.handleSubmit}/>\r\n                                <BotaoCancelar onClick={this.handleCancelForm}/>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","import React,{Component} from 'react';\r\n\r\nexport default class Main extends Component{\r\n    render(){\r\n        return(\r\n            <>\r\n                <div className=\"text-center\">\r\n                    <h2>Bem vindo ao sistema do Zool&oacute;gico</h2>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class MenuSuperior extends Component{\r\n    state = {\r\n        pageChecked:('/'+window.location.pathname.split('/').pop())\r\n    }\r\n    \r\n    handleClick(url){\r\n        this.setState({pageChecked:url});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">          \r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link\r\n                                to=\"/\"\r\n                                className={`${this.state.pageChecked==='/'?'active':''} nav-link`}\r\n                                onClick={this.handleClick.bind(this,'/')}>Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link\r\n                                to=\"/animais\"\r\n                                className={`${this.state.pageChecked==='/animais'?'active':''} nav-link`}\r\n                                onClick={this.handleClick.bind(this,'/animais')}>Animais</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link\r\n                                to=\"/consultas\"\r\n                                className={`${this.state.pageChecked==='/consultas'?'active':''} nav-link`}\r\n                                onClick={this.handleClick.bind(this,'/consultas')}>Consultas</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link\r\n                                to=\"/especies\"\r\n                                className={`${this.state.pageChecked==='/especies'?'active':''} nav-link`}\r\n                                onClick={this.handleClick.bind(this,'/especies')}>Esp&eacute;cies</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link\r\n                                to=\"/funcionarios\"\r\n                                className={`${this.state.pageChecked==='/funcionarios'?'active':''} nav-link`}\r\n                                onClick={this.handleClick.bind(this,'/funcionarios')}>Funcion&aacute;rios</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link\r\n                                to=\"/medicamentos\"\r\n                                className={`${this.state.pageChecked==='/medicamentos'?'active':''} nav-link`}\r\n                                onClick={this.handleClick.bind(this,'/medicamentos')}>Medicamentos</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { BrowserRouter,Route, Switch } from 'react-router-dom';\r\n\r\nimport FormularioAnimal from './pages/FormularioAnimal';\r\nimport FormularioEspecie from './pages/FormularioEspecie';\r\nimport FormularioConsulta from './pages/FormularioConsulta';\r\nimport FormularioFuncionario from './pages/FormularioFuncionario';\r\nimport FormularioMedicamento from './pages/FormularioMedicamento';\r\nimport Main from './pages/Main';\r\nimport MenuSuperior from './componentes/MenuSuperior';\r\n\r\nconst Routes = () => (\r\n    <BrowserRouter basename={'/Trabalho_Ban2CrudWeb'}>\r\n        <MenuSuperior/>\r\n        <Switch>\r\n            <Route path=\"/\" exact component={Main}></Route>\r\n            <Route path=\"/animais\" component={FormularioAnimal}></Route>\r\n            <Route path=\"/especies\" component={FormularioEspecie}></Route>\r\n            <Route path=\"/consultas\" component={FormularioConsulta}></Route>\r\n            <Route path=\"/funcionarios\" component={FormularioFuncionario}></Route>\r\n            <Route path=\"/medicamentos\" component={FormularioMedicamento}></Route>\r\n        </Switch>\r\n    </BrowserRouter>\r\n)\r\nexport default Routes;","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport Routes from './routes';\n\nconst App = () => <Routes/>;\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}